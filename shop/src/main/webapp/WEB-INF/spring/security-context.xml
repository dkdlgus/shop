<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
	
	
	<!-- bean설정 -->
	<bean id="customAccessDenied" class="com.kook.shop.security.CustomAccessDeniedHandler"></bean>
	<!-- 패스워드 암호화 -->
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<!-- CustomUserDetailsService사용 -->
	<bean id="customUserDetailsService" class="com.kook.shop.security.CustomUserDetailsService"></bean>
	
	<!-- security 최소 동작을 위한 설정 -->
	<security:http>

		<security:intercept-url pattern="/member/all" access="permitAll" />
		
		<!-- 권한 ROLE_ 은 로그인 해야만 주어짐 -->
		<security:intercept-url pattern="/member/member" access="hasAnyRole('ROLE_MEMBER', 'ROLE_MANAGER', 'ROLE_ADMIN')" />
		
		<security:intercept-url pattern="/member/admin" access="hasRole('ROLE_ADMIN')" />
		
		<!-- AccessDeniedHandler 인터페이스 구현 -->
		<!-- <security:access-denied-handler ref="customAccessDenied" /> -->
		
		<security:form-login login-page="/member/customLogin" />
		
		<security:form-login login-page="/member/customLogin" authentication-success-handler-ref="customLoginSuccess" />
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="3600" />
		
		<security:logout logout-url="/member/customLogout" invalidate-session="true" delete-cookies="remeber-me,JSESSIONID"/>
		
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserDetailsService">
			<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>
